<Objs Version="1.1.0.1" xmlns="http://schemas.microsoft.com/powershell/2004/04">
  <Obj RefId="0">
    <TN RefId="0">
      <T>Benchmark.Relative.Summary</T>
      <T>System.Management.Automation.PSCustomObject</T>
      <T>System.Object</T>
    </TN>
    <MS>
      <S N="Technique">Runspace</S>
      <Obj N="Time" RefId="1">
        <TN RefId="1">
          <T>System.TimeSpan</T>
          <T>System.ValueType</T>
          <T>System.Object</T>
          <T>Benchmark.Measure</T>
        </TN>
        <TS>PT0.916898S</TS>
        <MS>
          <S N="FileName">multithreading</S>
          <S N="GroupName">Multi-Threading</S>
          <Obj N="BenchmarkInput" RefId="2">
            <TN RefId="2">
              <T>System.Collections.Hashtable</T>
              <T>System.Object</T>
            </TN>
            <DCT>
              <En>
                <S N="Key">FileName</S>
                <S N="Value">multithreading</S>
              </En>
              <En>
                <S N="Key">RepeatCount</S>
                <U32 N="Value">3</U32>
              </En>
              <En>
                <S N="Key">ScriptBlock</S>
                <SBK N="Value">_x000A_        $RunspacePool = [runspacefactory]::CreateRunspacePool(1, $threads)_x000A_        $RunspacePool.Open()_x000A_        $runspace = foreach($chunk in $chunks) {_x000A_            $params = @{_x000A_                array = $chunk.Group_x000A_                average = $average_x000A_            }_x000A_            $ps = [powershell]::Create().AddScript($action).AddParameters($params)_x000A_            $ps.RunspacePool = $RunspacePool_x000A__x000A_            @{_x000A_                Instance = $ps_x000A_                Handle   = $ps.BeginInvoke()_x000A_            }_x000A_        }_x000A__x000A_        $resultRunspace = foreach($r in $runspace) {_x000A_            $r.Instance.EndInvoke($r.Handle)_x000A_        }_x000A__x000A_        $RunspacePool.Dispose()_x000A_        $hash = @{_x000A_            TestName      = 'Runspace'_x000A_            TestCount     = $resultRunspace.Count_x000A_            ExpectedCount = $expectedCount_x000A_        }_x000A_        $thisTest = &amp; $resultObject @hash        _x000A_    </SBK>
              </En>
              <En>
                <S N="Key">GroupName</S>
                <S N="Value">Multi-Threading</S>
              </En>
            </DCT>
          </Obj>
        </MS>
      </Obj>
      <Db N="RelativeSpeed">1</Db>
      <S N="GroupName">Multi-Threading</S>
      <I32 N="ClockSpeed">2095</I32>
      <S N="FileName">multithreading</S>
      <Db N="Throughput">3.271901563750821</Db>
      <Obj N="BenchmarkInput" RefId="3">
        <TNRef RefId="2" />
        <DCT>
          <En>
            <S N="Key">FileName</S>
            <S N="Value">multithreading</S>
          </En>
          <En>
            <S N="Key">RepeatCount</S>
            <U32 N="Value">3</U32>
          </En>
          <En>
            <S N="Key">GroupName</S>
            <S N="Value">Multi-Threading</S>
          </En>
        </DCT>
      </Obj>
    </MS>
  </Obj>
  <Obj RefId="4">
    <TNRef RefId="0" />
    <MS>
      <S N="Technique">ForEach-Object -Parallel</S>
      <Obj N="Time" RefId="5">
        <TNRef RefId="1" />
        <TS>PT1.2266261S</TS>
        <MS>
          <S N="FileName">multithreading</S>
          <S N="GroupName">Multi-Threading</S>
          <Obj N="BenchmarkInput" RefId="6">
            <TNRef RefId="2" />
            <DCT>
              <En>
                <S N="Key">FileName</S>
                <S N="Value">multithreading</S>
              </En>
              <En>
                <S N="Key">RepeatCount</S>
                <U32 N="Value">3</U32>
              </En>
              <En>
                <S N="Key">ScriptBlock</S>
                <SBK N="Value">_x000A_        $resultParallel = $chunks | ForEach-Object -Parallel {_x000A_            foreach($i in $_.Group) {_x000A_                if($i.FirstValue -le $using:average -and $i.SecondValue % 2) {_x000A_                    $i_x000A_                }_x000A_            }_x000A_        } -ThrottleLimit $threads_x000A_        $hash = @{_x000A_            TestName      = 'Parallel'_x000A_            TestCount     = $resultParallel.Count_x000A_            ExpectedCount = $expectedCount_x000A_        }_x000A_        $thisTest = &amp; $resultObject @hash        _x000A_    </SBK>
              </En>
              <En>
                <S N="Key">GroupName</S>
                <S N="Value">Multi-Threading</S>
              </En>
            </DCT>
          </Obj>
        </MS>
      </Obj>
      <Db N="RelativeSpeed">1.3377999515758567</Db>
      <S N="GroupName">Multi-Threading</S>
      <I32 N="ClockSpeed">2095</I32>
      <S N="FileName">multithreading</S>
      <Db N="Throughput">2.4457330559002455</Db>
      <Ref N="BenchmarkInput" RefId="3" />
    </MS>
  </Obj>
  <Obj RefId="7">
    <TNRef RefId="0" />
    <MS>
      <S N="Technique">Start-ThreadJob</S>
      <Obj N="Time" RefId="8">
        <TNRef RefId="1" />
        <TS>PT2.3705399S</TS>
        <MS>
          <S N="FileName">multithreading</S>
          <S N="GroupName">Multi-Threading</S>
          <Obj N="BenchmarkInput" RefId="9">
            <TNRef RefId="2" />
            <DCT>
              <En>
                <S N="Key">FileName</S>
                <S N="Value">multithreading</S>
              </En>
              <En>
                <S N="Key">RepeatCount</S>
                <U32 N="Value">3</U32>
              </En>
              <En>
                <S N="Key">ScriptBlock</S>
                <SBK N="Value">_x000A_        $jobs = foreach($chunk in $chunks) {_x000A_            Start-ThreadJob -ScriptBlock $action -ArgumentList $chunk.Group, $average -ThrottleLimit $threads_x000A_        }_x000A_        $resultThreadJob = Receive-Job $jobs -Wait -AutoRemoveJob_x000A_        $hash = @{_x000A_            TestName      = 'ThreadJob'_x000A_            TestCount     = $resultThreadJob.Count_x000A_            ExpectedCount = $expectedCount_x000A_        }_x000A_        $thisTest = &amp; $resultObject @hash        _x000A_    </SBK>
              </En>
              <En>
                <S N="Key">GroupName</S>
                <S N="Value">Multi-Threading</S>
              </En>
            </DCT>
          </Obj>
        </MS>
      </Obj>
      <Db N="RelativeSpeed">2.585391068581238</Db>
      <S N="GroupName">Multi-Threading</S>
      <I32 N="ClockSpeed">2095</I32>
      <S N="FileName">multithreading</S>
      <Db N="Throughput">1.2655344885778974</Db>
      <Ref N="BenchmarkInput" RefId="3" />
    </MS>
  </Obj>
  <Obj RefId="10">
    <TNRef RefId="0" />
    <MS>
      <S N="Technique">Start-Job</S>
      <Obj N="Time" RefId="11">
        <TNRef RefId="1" />
        <TS>PT36.4790089S</TS>
        <MS>
          <S N="FileName">multithreading</S>
          <S N="GroupName">Multi-Threading</S>
          <Obj N="BenchmarkInput" RefId="12">
            <TNRef RefId="2" />
            <DCT>
              <En>
                <S N="Key">FileName</S>
                <S N="Value">multithreading</S>
              </En>
              <En>
                <S N="Key">RepeatCount</S>
                <U32 N="Value">3</U32>
              </En>
              <En>
                <S N="Key">ScriptBlock</S>
                <SBK N="Value">_x000A_        $jobs = foreach($chunk in $chunks) {_x000A_            Start-Job -ScriptBlock $action -ArgumentList $chunk.Group, $average_x000A_        }_x000A_        $resultJob = Receive-Job $jobs -Wait -AutoRemoveJob_x000A_        $hash = @{_x000A_            TestName      = 'Job'_x000A_            TestCount     = $resultJob.Count_x000A_            ExpectedCount = $expectedCount_x000A_        }_x000A_        $thisTest = &amp; $resultObject @hash        _x000A_    </SBK>
              </En>
              <En>
                <S N="Key">GroupName</S>
                <S N="Value">Multi-Threading</S>
              </En>
            </DCT>
          </Obj>
        </MS>
      </Obj>
      <Db N="RelativeSpeed">39.7852420879967</Db>
      <S N="GroupName">Multi-Threading</S>
      <I32 N="ClockSpeed">2095</I32>
      <S N="FileName">multithreading</S>
      <Db N="Throughput">0.08223907640210039</Db>
      <Ref N="BenchmarkInput" RefId="3" />
    </MS>
  </Obj>
</Objs>